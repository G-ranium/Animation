proc GenerateStaircase(int $stairNum, float $stairWidth, float $stairHeight, float $stairDepth, float $pivotOffset, float $stepHeight, float $rot)
{
    string $temp[];
    string $selection;

    // Generate first stair
    $temp = `polyCube -width $stairWidth -height $stairHeight -depth $stairDepth -sx 1 -sy 1 -sz 1 -ax 0 1 0 -cuv 4 -ch 1 -name "stair1"`;
    $selection = $temp[0];

    // change pivot location
    move -r (($stairWidth/2) + $pivotOffset) 0 0 stair1.scalePivot stair1.rotatePivot ;

    // move stair to be flat on plane
    xform -worldSpace -translation 0 ($stairHeight/2) 0 $selection;
    select -r stair1.f[5];

    // scale the back face of the stair to cover gap between next stair
    scale -ws -r -p -1.5cm 0.5cm 0cm 1 1 ($stairWidth/3);
    select -r stair1;

    // loop to generate tthe rest of the stairs
    for ($i=0;$i<($stairNum-1);$i++)
    {
        $temp = `duplicate -returnRootsOnly`;
        $selection = $temp[0];
        xform -relative -objectSpace -translation ($stairWidth * -0.03) ($stairHeight) $stepHeight -rotation 0 $rot 0 $selection;
    }

    // group and name the group to staircase
    select -replace "stair*";
    group -name "staircase";
    
}
// example function call
GenerateStaircase(50, 10, 1.5, 1, -2, 1, 10);