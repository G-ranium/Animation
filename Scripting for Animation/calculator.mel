global proc float Add(float $input[])
{
    // plain and simple, take one input and add it to the next and accumulate
    $sum = 0;
    for($i = 0; $i < size($input); $i++)
    {
        $sum += $input[$i];
    }
    return($sum);
}
global proc float Subtract(float $input[])
{
    /* In order to get the correct answer the sum needs
    to be equal to the first number in the array */
    float $sum = $input[0];
    // loop to subtract
    for($i = 1; $i < size($input); $i++)
    {
        $sum -= $input[$i];
    }
    return($sum);
}
global proc float Multiply(float $input[])
{
    float $product = $input[0];
    // Loop through and multiply by first input and second and so on...
    for($i = 1; $i < size($input); $i++)
    {
        $product *= $input[$i];
    }
    return($product);
}
global proc float Divide(float $input[])
{
    float $dividend = $input[0];
    for($i = 1; $i < size($input); $i++)
    {
        // Make sure that after the first input there are no divide by zero errors
        if ($input[$i] == 0)
        {
            print("One or more input creates division by zero.");
            break;
        }
        // Loop through and divide the first input by second and so on...
        $dividend /= $input[$i];
    }
    return($dividend);
}
global proc float Power(float $input[])
{
    // Takes base and exponent and returns a power
    float $base = $input[0];
    float $exponent = $input[1];
    float $power = pow($base, $exponent);
    return($power);
}

global proc float Mean(float $input[])
{
    // create variable to keep track of input
    float $total = 0;
    // add all input together
    for($i = 0; $i < size($input); $i++)
    {
        $total += $input[$i];
    }
    // return the sum of input divided by number of data
    return($total/size($input));
}

global proc float Median(float $input[])
{
    // take the input and sort it
    float $sortedinput[] = `sort $input`;
    float $median;
    /* if the input has an even number of data
    then take the average of the two middle numbers*/
    if(size($input) % 2 == 0)
    {
        $median = (($input[size($input)/2] + $input[(size($input)/2)-1])/2);
    }
    // Otherwise just take the number in the middle
    else
    {
        $median = $input[((size($input)/2))];
    }
    return($median);
}

proc Calculator(string $operation, float $input[])
{
    // create variables to display results
    float $result = 0;
    string $usedOperator = "";

    // chain of if statements to decide which operation is to be performed
    if($operation == "+" || $operation == "add" || $operation == "1")
    {
        $result = `Add($input)`;
        $usedOperator = "+";
    }
    else if($operation == "-" || $operation == "subtract" || $operation == "2")
    {
        $result = `Subtract($input)`;
        $usedOperator = "-";
    }
    else if($operation == "*" || $operation == "x" || $operation == "multiply" || $operation == "3")
    {
        $result = `Multiply($input)`;
        $usedOperator = "*";
    }
    else if($operation == "/" || $operation == "divide" || $operation == "4")
    {
        $result = `Divide($input)`;
        $usedOperator = "/";
    }
    else if($operation == "^" || $operation == "power" || $operation == "5")
    {
        $result = `Power($input)`;
        $usedOperator = "^";
    }
    else if($operation == "mean" || $operation == "average" || $operation == "6")
    {
        $result = `Mean($input)`;
        $usedOperator = ",";
        print("The mean of ");
    }
    else if($operation == "median" || $operation == "7")
    {
        $result = `Median($input)`;
        $usedOperator = ",";
        print("The median of ");
    }

    // print statement to print the results to the console
    print($input[0] + " ");
    for ($i=1; $i<size($input); $i++)
    {
        print($usedOperator +  " " + $input[$i] + " ");
    }
    print("= " + $result + "\n");
}

// Example function calls for each function
Calculator("1", {3,7,20,80});
Calculator("2", {100,20,5});
Calculator("3", {5,5,10});
Calculator("4", {1000,10,10});
Calculator("5", {10,2});
Calculator("6", {1,4,10,2,8});
Calculator("7", {1,2,3,4,5,6,7,8,9,10});