proc float Add(float $input[])
{
    // plain and simple, take one input and add it to the next and accumulate
    $sum = 0;
    for($i = 0; $i < size($input); $i++)
    {
        $sum += $input[$i];
    }
    return($sum);
}
proc float Subtract(float $input[])
{
    /* In order to get the correct answer the sum needs
    to be equal to the first number in the array */
    float $sum = $input[0];
    // loop to subtract
    for($i = 1; $i < size($input); $i++)
    {
        $sum -= $input[$i];
    }
    return($sum);
}
proc float Multiply(float $input[])
{
    float $product = $input[0];
    // Loop through and multiply by first input and second and so on...
    for($i = 1; $i < size($input); $i++)
    {
        $product *= $input[$i];
    }
    return($product);
}
proc float Divide(float $input[])
{
    float $dividend = $input[0];
    for($i = 1; $i < size($input); $i++)
    {
        // Make sure that after the first input there are no divide by zero errors
        if ($input[$i] == 0)
        {
            print("One or more input creates division by zero.");
            break;
        }
        // Loop through and divide the first input by second and so on...
        $dividend /= $input[$i];
    }
    return($dividend);
}
proc float Power(float $input[])
{
    // Takes base and exponent and returns a power
    float $base = $input[0];
    float $exponent = $input[1];
    float $power = pow($base, $exponent);
    return($power);
}

proc float Mean(float $input[])
{
    // create variable to keep track of input
    float $total = 0;
    // add all input together
    for($i = 0; $i < size($input); $i++)
    {
        $total += $input[$i];
    }
    // return the sum of input divided by number of data
    return($total/size($input));
}

proc float Median(float $input[])
{
    // take the input and sort it
    float $sortedinput[] = `sort $input`;
    float $median;
    /* if the input has an even number of data
    then take the average of the two middle numbers*/
    if(size($input) % 2 == 0)
    {
        $median = (($input[size($input)/2] + $input[(size($input)/2)-1])/2);
    }
    // Otherwise just take the number in the middle
    else
    {
        $median = $input[((size($input)/2))];
    }
    return($median);
}

// Example function calls
print("6 + 4 + 15 = " + Add({6,4,15}) + "\n");
print("6 - 4 - 15 = " + Subtract({6,4,15}) + "\n");
print("5*4*5*10 = " + Multiply({5,4,5,10}) + "\n");
print("300/10/3 = " + Divide({300,10,3}) + "\n");
print("3 ^ 2 = " + Power({3,2}) + "\n");
print("Mean of 25,15,10,20,15,15,20,-20,30,-30 = " + Mean({25,15,10,20,15,15,20,-20,30,-30}) + "\n");
print("Median of 10,20,30,40,50,60,70,80,90,100 = " + Median({10,20,30,40,50,60,70,80,90,100}) + "\n");
print("Median of 10,20,30,40,50,60,70,80,90,100 = " + Median({10,20,30,40,50,60,70,80,90}) + "\n");