proc float Add(float $input[])
{
    $sum = 0;
    for($i = 0; $i < size($input); $i++)
    {
        $sum += $input[$i];
    }
    return($sum);
}
proc float Subtract(float $input[])
{
    float $sum = $input[0];
    for($i = 1; $i < size($input); $i++)
    {
        $sum -= $input[$i];
    }
    return($sum);
}
proc float Multiply(float $input[])
{
    float $product = $input[0];
    for($i = 1; $i < size($input); $i++)
    {
        $product *= $input[$i];
    }
    return($product);
}
proc float Divide(float $input[])
{
    float $dividend = $input[0];
    for($i = 1; $i < size($input); $i++)
    {
        if ($input[$i] == 0)
        {
            print("One or more input creates division by zero.");
            break;
        }
        $dividend /= $input[$i];
    }
    return($dividend);
}
proc float Power(float $input[])
{
    float $base = $input[0];
    float $exponent = $input[1];
    float $power = pow($base, $exponent);
    return($power);
}

proc float Mean(float $input[])
{
    float $total = 0;
    for($i = 0; $i < size($input); $i++)
    {
        $total += $input[$i];
    }
    return($total/size($input));
}

proc float Median(float $input[])
{
    float $sortedinput[] = `sort $input`;
    float $median;
    if(size($input) % 2 == 0)
    {
        $median = (($input[size($input)/2] + $input[(size($input)/2)-1])/2);
    }
    else
    {
        $median = $input[((size($input)/2))];
    }
    return($median);
}



print(Median({1,2,3,4,5,6,7,8,9,10,11,12}));